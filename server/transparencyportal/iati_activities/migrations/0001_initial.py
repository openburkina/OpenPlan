# Generated by Django 3.1.13 on 2022-12-07 11:58

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('iati_referentiel', '0003_condition_tag'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated_datetime', models.CharField(blank=True, db_column='Last-updated-datetime', max_length=255, null=True)),
                ('lang', models.CharField(blank=True, max_length=255, null=True)),
                ('default_currency', models.CharField(blank=True, db_column='Default-currency', max_length=255, null=True)),
                ('humanitarian', models.BooleanField()),
                ('hierarchy', models.IntegerField()),
                ('budget_not_provided', models.CharField(blank=True, db_column='Budget-not-provided', max_length=255, null=True)),
                ('iati_identifier', models.BigIntegerField(db_column='Iati-identifier')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('activity_status', models.CharField(blank=True, db_column='Activity-status', max_length=255, null=True)),
                ('activity_scope', models.CharField(blank=True, db_column='Activity-scope', max_length=255, null=True)),
                ('type_relationship', models.CharField(blank=True, db_column='Type-relationship', max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Gestion Projet',
                'verbose_name_plural': 'Gestion des Projets',
                'db_table': 'activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('planned_start', models.CharField(blank=True, db_column='Planned-start', max_length=255, null=True)),
                ('planned_end', models.CharField(blank=True, db_column='Planned-end', max_length=255, null=True)),
                ('actual_start', models.CharField(blank=True, db_column='Actual-start', max_length=255, null=True)),
                ('actual_end', models.CharField(blank=True, db_column='Actual-end', max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Date',
                'verbose_name_plural': 'Dates',
                'db_table': 'Activity-date',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityParticipatingOrg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Participant',
                'verbose_name_plural': 'Participants',
                'db_table': 'Activity-Participating-org',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Actual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'actual',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Baseline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.CharField(blank=True, db_column='Date', max_length=255, null=True)),
            ],
            options={
                'db_table': 'baseline',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('statusst', models.CharField(blank=True, max_length=255, null=True)),
                ('period_start', models.CharField(blank=True, db_column='Period-start', max_length=255, null=True)),
                ('period_end', models.CharField(blank=True, db_column='Period-end', max_length=255, null=True)),
                ('value', models.FloatField()),
                ('currency', models.CharField(blank=True, max_length=255, null=True)),
                ('value_date', models.CharField(blank=True, db_column='Value-date', max_length=255, null=True)),
            ],
            options={
                'db_table': 'budget',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(blank=True, db_column='Date', max_length=255, null=True)),
                ('text', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConditionActivity',
            fields=[
                ('conditionid', models.OneToOneField(db_column='conditionid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='iati_referentiel.condition')),
            ],
            options={
                'db_table': 'condition_activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_name', models.CharField(blank=True, db_column='Person-name', max_length=255, null=True)),
                ('job_title', models.CharField(blank=True, db_column='Job-title', max_length=255, null=True)),
                ('telephone', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
                'db_table': 'Contact-info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DefaultAidTypeActivity',
            fields=[
                ('default_aid_typeid', models.OneToOneField(db_column='default-aid-typeID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='iati_referentiel.defaultaidtype')),
            ],
            options={
                'db_table': 'default-aid-type_Activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DefaultFinanceTypeActivity',
            fields=[
                ('default_finance_typeid', models.OneToOneField(db_column='Default-finance-typeID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='iati_referentiel.defaultfinancetype')),
            ],
            options={
                'verbose_name': 'Type de finance par défaut',
                'verbose_name_plural': 'Type de finance par défaut',
                'db_table': 'Default-finance-type_Activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dimension',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'dimension',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DocumentLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('format', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('lang', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Lien Document',
                'verbose_name_plural': 'Lien Document',
                'db_table': 'Document-link',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measure', models.CharField(blank=True, max_length=255, null=True)),
                ('ascending', models.BooleanField()),
                ('aggregation_status', models.BooleanField(db_column='Aggregation-status')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'indicator',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_start', models.CharField(blank=True, db_column='Period-start', max_length=255, null=True)),
                ('period_end', models.CharField(blank=True, db_column='Period-end', max_length=255, null=True)),
            ],
            options={
                'db_table': 'period',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlannedDisbursement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('period_start', models.CharField(blank=True, db_column='Period-start', max_length=255, null=True)),
                ('period_end', models.CharField(blank=True, db_column='Period-end', max_length=255, null=True)),
                ('value', models.FloatField()),
                ('currency', models.CharField(blank=True, max_length=255, null=True)),
                ('value_date', models.CharField(blank=True, db_column='Value-date', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Planned-disbursement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('aggregation_status', models.BooleanField(db_column='Aggregation-status')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'results',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Target',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('commentid', models.IntegerField()),
            ],
            options={
                'db_table': 'target',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref', models.CharField(blank=True, max_length=255, null=True)),
                ('humanitarian', models.BooleanField()),
                ('transaction_type', models.CharField(blank=True, db_column='Transaction-type', max_length=255, null=True)),
                ('transaction_date', models.CharField(blank=True, db_column='Transaction-date', max_length=255, null=True)),
                ('value', models.FloatField()),
                ('currency', models.CharField(blank=True, max_length=255, null=True)),
                ('value_date', models.CharField(blank=True, db_column='Value-date', max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('disbursement_channel', models.CharField(blank=True, db_column='Disbursement-channel', max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'db_table': 'Transaction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityCollaborationType',
            fields=[
                ('activityid', models.OneToOneField(db_column='activityid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='iati_activities.activity')),
            ],
            options={
                'db_table': 'Activity_Collaboration-type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityHumanitarianScope',
            fields=[
                ('activityid', models.OneToOneField(db_column='activityid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='iati_activities.activity')),
            ],
            options={
                'verbose_name': 'Portée humanitaire de lactivité',
                'verbose_name_plural': 'Portée humanitaires de l"activité',
                'db_table': 'Activity_Humanitarian-scope',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityLocation',
            fields=[
                ('activityid', models.OneToOneField(db_column='activityid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='iati_activities.activity')),
            ],
            options={
                'verbose_name': 'Localisation Projet',
                'verbose_name_plural': 'Localisation Projet',
                'db_table': 'activity_location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityOrganization',
            fields=[
                ('activityid', models.OneToOneField(db_column='activityid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='iati_activities.activity')),
            ],
            options={
                'verbose_name': 'Bailleur Projet',
                'verbose_name_plural': 'Bailleur Projet',
                'db_table': 'activity_organization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivitySector',
            fields=[
                ('activityid', models.OneToOneField(db_column='activityid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='iati_activities.activity')),
            ],
            options={
                'verbose_name': 'Secteur Projet',
                'verbose_name_plural': 'Secteur Projet',
                'db_table': 'activity_sector',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityTag',
            fields=[
                ('activityid', models.OneToOneField(db_column='activityid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='iati_activities.activity')),
            ],
            options={
                'verbose_name': 'Etiquette Projet',
                'verbose_name_plural': 'ETiquette Projet',
                'db_table': 'activity_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActualDimension',
            fields=[
                ('actualid', models.OneToOneField(db_column='actualid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='iati_activities.actual')),
            ],
            options={
                'db_table': 'actual_dimension',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActualDocumentLink',
            fields=[
                ('actualid', models.OneToOneField(db_column='actualid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='iati_activities.actual')),
            ],
            options={
                'verbose_name': 'Document Actuel',
                'verbose_name_plural': 'Documents Actuel',
                'db_table': 'Actual_Document-link',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaselineDocumentLink',
            fields=[
                ('baselineid', models.OneToOneField(db_column='baselineid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='iati_activities.baseline')),
            ],
            options={
                'db_table': 'Baseline_Document-link',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DocumentLinkIndicator',
            fields=[
                ('document_linkid', models.OneToOneField(db_column='Document-linkID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='iati_activities.documentlink')),
            ],
            options={
                'verbose_name': 'Document Indicateur',
                'verbose_name_plural': 'Document Indicateur',
                'db_table': 'Document-link_Indicator',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DocumentLinkResults',
            fields=[
                ('document_linkid', models.OneToOneField(db_column='Document-linkID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='iati_activities.documentlink')),
            ],
            options={
                'verbose_name': 'Document Résultat',
                'verbose_name_plural': 'Document Résultat',
                'db_table': 'Document-link_Results',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TargetComment2',
            fields=[
                ('targetid', models.OneToOneField(db_column='targetid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='iati_activities.target')),
            ],
            options={
                'db_table': 'target_comment2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TargetDimension',
            fields=[
                ('targetid', models.OneToOneField(db_column='targetid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='iati_activities.target')),
            ],
            options={
                'db_table': 'target_dimension',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TransactionSector',
            fields=[
                ('transactionid', models.OneToOneField(db_column='transactionid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='iati_activities.transaction')),
            ],
            options={
                'db_table': 'transaction_sector',
                'managed': False,
            },
        ),
    ]
